<svg width="1920" height="226" viewBox="0 0 1920 226" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_147_127)">
<mask id="mask0_147_127" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="1920" height="226">
<path d="M1920 0H0V226H1920V0Z" fill="white"/>
</mask>
<g mask="url(#mask0_147_127)">
<mask id="mask1_147_127" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="1920" height="226">
<path d="M1920 0H0V226H1920V0Z" fill="white"/>
</mask>
<g mask="url(#mask1_147_127)">
<mask id="mask2_147_127" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="-118" y="-1324" width="2039" height="1762">
<path d="M1920.24 -1324H-118V437.22H1920.24V-1324Z" fill="white"/>
</mask>
<g mask="url(#mask2_147_127)">
<path opacity="0.6" d="M0.245117 78.356V-1119.87H6.24512V-1458.12C6.24512 -1458.12 331.555 -1230.23 936.962 -1419.4C1542.37 -1608.57 1913.98 -1419.4 1913.98 -1419.4V-1119.87H1920.24V77.2479C1920.24 77.2479 1560.51 -110.816 963.581 78.356C764.617 141.41 591.237 162.43 448.525 162.433C163.076 162.438 0.245117 78.356 0.245117 78.356Z" fill="#FBEBD5"/>
<path d="M956.908 86.2637C359.979 -85.1173 0.245117 85.2637 0.245117 85.2637V-1457.83C0.245117 -1457.83 366.653 -1629.21 963.582 -1457.83C1560.51 -1286.45 1920.24 -1456.83 1920.24 -1456.83V86.2637C1920.24 86.2637 1757.41 162.438 1471.96 162.433C1329.25 162.431 1155.87 143.388 956.908 86.2637Z" fill="#F5D09C"/>
</g>
</g>
</g>
</g>
<defs>
<clipPath id="clip0_147_127">
<rect width="1920" height="226" fill="white"/>
</clipPath>
</defs>
<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
</svg>
